<?php

namespace App\Http\Middleware;

use Closure;
use Illuminate\Http\Request;

class CheckJWTAuthorization
{
/**
 * Handle an incoming request.
 *
 * This middleware checks for the presence of an "Authorization" header in the incoming request.
 * If the header is missing, it responds with an Unauthorized error (HTTP 401).
 * If the header is present, it extracts the JWT (JSON Web Token) from the header and attaches it to the request.
 *
 * @param \Illuminate\Http\Request $request The incoming HTTP request.
 * @param \Closure $next The next middleware in the pipeline.
 * @return mixed The response generated by the next middleware or the controller.
 */
public function handle(Request $request, Closure $next)
{
    // Check if the Authorization header is present in the request
    if (!$request->hasHeader('Authorization')) {
        // Respond with an Unauthorized error if the header is missing
        return response()->json(['error' => 'Unauthorized'], 401);
    }

    // Extract the JWT token from the Authorization header by removing the "Bearer" prefix
    $authorizationHeader = $request->header('Authorization');
    $jwt = str_replace('Bearer ', '', $authorizationHeader);

    // Attach the JWT to the request for further processing in the controller
    $request->jwt = $jwt;

    // Continue processing the request by passing it to the next middleware or the controller
    return $next($request);
}

}