openapi: 3.0.3
info:
  title: gamepawbuddy
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://gamepawbuddy.local'
paths:
  /api/v1/login:
    post:
      summary: 'Authenticate the user and issue an API token.'
      operationId: authenticateTheUserAndIssueAnAPIToken
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  token: api_token_here
                properties:
                  token:
                    type: string
                    example: api_token_here
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Invalid credentials'
                properties:
                  error:
                    type: string
                    example: 'Invalid credentials'
      tags:
        - 'Authenticating requests'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email address of the user.'
                  example: john@example.com
                password:
                  type: string
                  description: 'The password of the user.'
                  example: '>B1_"L>HtQQ'
              required:
                - email
                - password
      security: []
  /api/v1/create-user:
    post:
      summary: 'Handle the user creation request.'
      operationId: handleTheUserCreationRequest
      description: ''
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User created successfully'
                properties:
                  message:
                    type: string
                    example: 'User created successfully'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Validation failed'
                  errors:
                    email:
                      - 'The email field is required.'
                    password:
                      - 'The password field is required.'
                properties:
                  message:
                    type: string
                    example: 'Validation failed'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The email field is required.'
                        items:
                          type: string
                      password:
                        type: array
                        example:
                          - 'The password field is required.'
                        items:
                          type: string
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'User creation failed'
                properties:
                  message:
                    type: string
                    example: 'User creation failed'
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email address of the user.'
                  example: john@example.com
                password:
                  type: string
                  description: 'The password for the user. The password must meet the following criteria: a minimum length of 8 characters, at least one uppercase letter, at least one lowercase letter, at least one number, and at least one special character.'
                  example: 'An$cy,sWpv'
              required:
                - email
                - password
      security: []
tags:
  -
    name: 'Authenticating requests'
    description: 'This endpoint allows users to authenticate and retrieve an API token. You must provide the user''s email and password in the request body.'
  -
    name: User
    description: 'This endpoint allows you to create a new user. The user''s email and password should be provided in the request body.'
